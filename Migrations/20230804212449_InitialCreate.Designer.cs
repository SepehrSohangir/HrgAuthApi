// <auto-generated />
using System;
using HrgAuthApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HrgAuthApi.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20230804212449_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HrgAuthApi.Models.UserGroups", b =>
                {
                    b.Property<short>("GroupCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("GroupCode"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupCode");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("HrgAuthApi.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<bool>("DisableUser")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("GroupCode")
                        .HasColumnType("smallint");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastLoginDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastPasswordChange")
                        .HasColumnType("int");

                    b.Property<string>("Organ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PID")
                        .HasColumnType("int");

                    b.Property<bool>("PTAC")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Password")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PukCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UserMustChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("startPageMode")
                        .HasColumnType("smallint");

                    b.Property<string>("usrPasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "CompanyID");

                    b.HasIndex("GroupCode");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HrgAuthApi.Models.Users", b =>
                {
                    b.HasOne("HrgAuthApi.Models.UserGroups", "UserGroup")
                        .WithMany("Users")
                        .HasForeignKey("GroupCode");

                    b.Navigation("UserGroup");
                });

            modelBuilder.Entity("HrgAuthApi.Models.UserGroups", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
